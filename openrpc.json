{
    "openrpc": "1.0.0",
    "info": {
      "version": "1.0.0",
      "title": "OpenRPC Petstore",
      "license": {
        "name": "Apache-2"
      }
    },
    "servers": [
      {
        "url": "http://localhost:1920"
      }
    ],
    "methods": [
      {
        "name": "jade_heartbeat",
        "summary": "Check service health",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "name": "timestamp",
          "description": "Seconds since Jan 01 1970 (UTC)",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      {
        "name": "jade_currentVersion",
        "summary": "Check service health",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "name": "version",
          "description": "Current version according semantic versioning",
          "type": "string"
        }
      },
      {
        "name": "jade_listAccounts",
        "summary": "Return the list of all not hidden (by default) accounts from the keystore",
        "tags": [
          "jade"
        ],
        "params": [
          {
            "schema": {
              "anyOf": [
                {"$ref": "#/components/schemas/Chain"},
                {"$ref": "#/components/schemas/Chain_ID"},
                {"$ref": "#/components/schemas/Show_hidden"} 
              ]
            }
          }
        ],
        "result": {
          "name": "accounts",
          "description": "List of all not hidden accounts",
          "schema": {
            "$ref": "#/components/schemas/Accounts"
          }
        }
      },
      {
        "name": "jade_hideAccount",
        "summary": "Hide an account from the list returned by default by `jade_listAccounts`",
        "tags": [
          "jade"
        ],
        "params": [
          {
            "name": "address",
            "required": true,
            "description": "hex-encoded 20 bytes public address",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "chain",
            "required": false,
            "description": "chain name, by default `mainnet`, other possible variant `morden`",
            "schema": {
              "type": "string"
            }
          }, 
          {
            "name": "chain_id",
            "required": false,
            "description": "chain id number, by default for `mainnet` it equals `61`",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "result": {
          "name": "accept",
          "description": "`true` if required account exists",
          "schema": {
            "type": "boolean"
          }
        }
      },
      {
        "name": "jade_unhideAccount",
        "summary": "Show an account that was hidden before by the command `jade_hideAccount`",
        "tags": [
          "jade"
        ],
        "params": [{
          "name": "address",
          "required": true,
          "description": "hex-encoded 20 bytes public address",
          "schema": {
            "type": "string"
          }
        },
        {
          "name": "chain",
          "required": false,
          "description": "chain name, by default `mainnet`, other possible variant `morden`",
          "schema": {
            "type": "string"
          }
        }, 
        {
          "name": "chain_id",
          "required": false,
          "description": "chain id number, by default for `mainnet` it equals `61`",
          "schema": {
            "type": "integer",
            "format": "int64"
          }
        }],
        "result": {
          "description": "`accept` (Boolean) - `true` if required account exists",
          "type": "boolean"
        }
      },
      {
        "name": "jade_newAccount",
        "summary": "Creates a new account and stores it locally as a passphrase-encoded keystore file.",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_shakeAccount",
        "summary": "Recreate account with the same public address, but with a different passphrase",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_updateAccount",
        "summary": "Update not secured by passphrase account metadata, like `name` and `description`",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_importAccount",
        "summary": "Import a new account from an external keyfile. Handle both cases: normal account & HD wallet account",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_exportAccount",
        "summary": "Returns an account keyfile associated with the account.",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_generateMnemonic",
        "summary": "Generates a new 24 words long mnemonic phrase",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "hex-encoded 20 bytes public address",
          "type": "string"
        }
      },
      {
        "name": "jade_importMnemonic",
        "summary": "Creates a new account from a mnemonic and stores it locally as a passphrase-encoded keystore file",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_signTransaction",
        "summary": "Signs transaction offline with private key from keystore file with given passphrase.\nIf `function` and `arguments` are provided, they will be encoded according smart contract ABI \nand used in the `data` field of the transaction",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_listContracts",
        "summary": "Return the list of all not hidden (by default) smart contracts from the local storage",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_hideContract",
        "summary": "Hide a smart contract from the list returned by default by `jade_listContracts`",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_unhideContract",
        "summary": "Show a smart contract that was hidden before by the command `jade_hideContract`",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_updateContract",
        "summary": "Update contract metadata. Contract address and chain information \nare used to identify the contract, and may not be updated.",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_importContract",
        "summary": "Import a new smart contract Application Binary Interface (ABI) locally",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_exportContract",
        "summary": "Returns contract object associated with the contract",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_importAddress",
        "summary": "Add new contact into address book",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_listAddresses",
        "summary": "Return all addresses for particular chain",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      },
      {
        "name": "jade_deleteAddress",
        "summary": "Delete contact from address book",
        "tags": [
          "jade"
        ],
        "params": [],
        "result": {
          "description": "",
          "type": "boolean"
        }
      }
    ],
    "components": {
      "schemas": {
        "Account": {
          "required": [
            "address",
            "hardware",
            "is_hidden"
          ],
          "properties": {
            "address": {
              "type": "string"
            },
            "hardware": {
              "type": "boolean"
            },
            "name": {
              "required": false,
              "type": "string"
            },
            "description": {
              "required": false,
              "type": "string"
            },
            "is_hidden": {
              "type": "boolean"
            },
            "tag": {
              "type": "string"
            }
          }
        },
        "Accounts": {
          "type": "array",
          "items": {
            "$ref": "#/components/schemas/Account"
          }
        },
        "Chain": {
          "required": [
            "name"
          ],
          "properties": {
            "name": {
              "type": "string"
            }
          }
        }, 
        "Chain_ID": {
          "required": [
            "id"
          ],
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            }
          }
        },
        "Show_hidden": {
          "required": [
            "show_hidden" 
          ],
          "properties": {
            "id": {
              "type": "boolean"
            }
          }
        }
      }
    }
}