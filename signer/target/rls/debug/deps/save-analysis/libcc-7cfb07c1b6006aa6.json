{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57],"program":"/home/k2/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","cc","/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,link","-C","debuginfo=2","--cfg","feature=\"parallel\"","--cfg","feature=\"rayon\"","-C","metadata=7cfb07c1b6006aa6","-C","extra-filename=-7cfb07c1b6006aa6","--out-dir","/home/k2/Workbench/jade-signer/target/rls/debug/deps","-L","dependency=/home/k2/Workbench/jade-signer/target/rls/debug/deps","--extern","rayon=/home/k2/Workbench/jade-signer/target/rls/debug/deps/librayon-e1f764212559ce7c.rlib","--cap-lints","allow","--error-format=json","--sysroot","/home/k2/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,107,50,47,87,111,114,107,98,101,110,99,104,47,106,97,100,101,45,115,105,103,110,101,114,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,99,99,45,55,99,102,98,48,55,99,49,98,54,48,48,54,97,97,54,46,114,108,105,98]},"prelude":{"crate_id":{"name":"cc","disambiguator":[18219703089940553701,8645548861108319080]},"crate_root":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src","external_crates":[{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7643654914076001483,12823312228256817667]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4460275713293065345,16951895692468253576]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11180861269583930402,7218748977825450810]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4642033898704731799,9729154345420223309]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12818274104326731107,682062526801359143]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12755702926841618597,12055052820604553981]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[1437492519896548358,983587994810570921]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[15755932282147130284,14837425147787014863]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[14848937618377221952,4542086914855755700]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[1423741341053305533,4588337216884661599]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":11,"id":{"name":"rayon","disambiguator":[12816425425840930775,17168117390387747747]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":12,"id":{"name":"rayon_core","disambiguator":[5848325068828144031,13985698886306443897]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":13,"id":{"name":"crossbeam_deque","disambiguator":[3361247722907716201,4351983470049895383]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":14,"id":{"name":"crossbeam_epoch","disambiguator":[1289045003571234412,836605301966408836]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":15,"id":{"name":"nodrop","disambiguator":[6276601721124908130,1487545550323695804]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":16,"id":{"name":"arrayvec","disambiguator":[484463860819409814,15650377520420627201]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":17,"id":{"name":"crossbeam_utils","disambiguator":[10692692731420644554,15336791361082851247]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":18,"id":{"name":"cfg_if","disambiguator":[674446661888682822,8448771253799059100]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":19,"id":{"name":"lazy_static","disambiguator":[4632282291239013638,7454143970243275617]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":20,"id":{"name":"memoffset","disambiguator":[4737696303626028603,8931918685548008576]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":21,"id":{"name":"scopeguard","disambiguator":[6712566559177732432,13161008672255685275]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":22,"id":{"name":"libc","disambiguator":[15679647890421436773,3919944383526361483]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":23,"id":{"name":"num_cpus","disambiguator":[520662323207906417,8606223784317944614]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","num":24,"id":{"name":"either","disambiguator":[9723121371707417643,4703575138959671089]}}],"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":83461,"line_start":1,"line_end":2329,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":83461,"line_start":1,"line_end":2329,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":24},{"krate":0,"index":32},{"krate":0,"index":44},{"krate":0,"index":50},{"krate":0,"index":52},{"krate":0,"index":58},{"krate":0,"index":288},{"krate":0,"index":294},{"krate":0,"index":290},{"krate":0,"index":298},{"krate":0,"index":304},{"krate":0,"index":300},{"krate":0,"index":308},{"krate":0,"index":314},{"krate":0,"index":310},{"krate":0,"index":70},{"krate":0,"index":74},{"krate":0,"index":318},{"krate":0,"index":324},{"krate":0,"index":320},{"krate":0,"index":328},{"krate":0,"index":344},{"krate":0,"index":340},{"krate":0,"index":336},{"krate":0,"index":330},{"krate":0,"index":78},{"krate":0,"index":346},{"krate":0,"index":352},{"krate":0,"index":348},{"krate":0,"index":98},{"krate":0,"index":102},{"krate":0,"index":226},{"krate":0,"index":230},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266}],"decl_id":null,"docs":" A library for build scripts to compile custom C code","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1798,"byte_end":1819,"line_start":58,"line_end":58,"column_start":1,"column_end":22}},{"value":"deny(missing_docs)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1820,"byte_end":1842,"line_start":59,"line_end":59,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":58},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"windows_registry","qualname":"::windows_registry","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/cc-1.0.29/src/windows_registry.rs","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":62},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":268},{"krate":0,"index":284},{"krate":0,"index":280},{"krate":0,"index":276},{"krate":0,"index":274},{"krate":0,"index":270},{"krate":0,"index":68}],"decl_id":null,"docs":" A helper module to probe the Windows Registry when looking for\n windows-specific tools.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":64},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":84801,"byte_end":84805,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"find","qualname":"::windows_registry::find","value":"fn (target: &str, tool: &str) -> Option<Command>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to find a tool within an MSVC installation using the Windows\n registry as a point to search from.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":66},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":85129,"byte_end":85138,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"find_tool","qualname":"::windows_registry::find_tool","value":"fn (_target: &str, _tool: &str) -> Option<Tool>","parent":null,"children":[],"decl_id":null,"docs":" Similar to the `find` function above, this function will attempt the same\n operation (finding a MSVC tool in a local install) but instead returns a\n `Tool` which may be introspected.\n","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":85101,"byte_end":85121,"line_start":45,"line_end":45,"column_start":1,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":137},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":87034,"byte_end":87038,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Vs12","qualname":"::windows_registry::VsVers::Vs12","value":"VsVers::Vs12","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":" Visual Studio 12 (2013)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":139},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":87076,"byte_end":87080,"line_start":103,"line_end":103,"column_start":5,"column_end":9},"name":"Vs14","qualname":"::windows_registry::VsVers::Vs14","value":"VsVers::Vs14","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":" Visual Studio 14 (2015)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":141},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":87118,"byte_end":87122,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"Vs15","qualname":"::windows_registry::VsVers::Vs15","value":"VsVers::Vs15","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":" Visual Studio 15 (2017)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":143},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":87395,"byte_end":87452,"line_start":112,"line_end":112,"column_start":5,"column_end":62},"name":"__Nonexhaustive_do_not_match_this_or_your_code_will_break","qualname":"::windows_registry::VsVers::__Nonexhaustive_do_not_match_this_or_your_code_will_break","value":"VsVers::__Nonexhaustive_do_not_match_this_or_your_code_will_break","parent":{"krate":0,"index":268},"children":[],"decl_id":null,"docs":" Hidden variant that should not be matched on. Callers that want to\n handle an enumeration of `VsVers` instances should always have a default\n case meaning that it's a VS version they don't understand.\n","sig":null,"attributes":[{"value":"allow(bad_style)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":87371,"byte_end":87390,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Enum","id":{"krate":0,"index":268},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":86989,"byte_end":86995,"line_start":99,"line_end":99,"column_start":10,"column_end":16},"name":"VsVers","qualname":"::windows_registry::VsVers","value":"VsVers::{Vs12, Vs14, Vs15, __Nonexhaustive_do_not_match_this_or_your_code_will_break}","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":141},{"krate":0,"index":143}],"decl_id":null,"docs":" A version of Visual Studio\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":86980,"byte_end":87455,"line_start":99,"line_end":113,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":86980,"byte_end":87455,"line_start":99,"line_end":113,"column_start":1,"column_end":2}}]},{"kind":"Function","id":{"krate":0,"index":68},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":87626,"byte_end":87641,"line_start":120,"line_end":120,"column_start":8,"column_end":23},"name":"find_vs_version","qualname":"::windows_registry::find_vs_version","value":"fn () -> Result<VsVers, String>","parent":null,"children":[],"decl_id":null,"docs":" Find the most recent installed version of Visual Studio","sig":null,"attributes":[{"value":"cfg(not(windows))","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,119,105,110,100,111,119,115,95,114,101,103,105,115,116,114,121,46,114,115],"byte_start":87598,"byte_end":87618,"line_start":119,"line_end":119,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2742,"byte_end":2747,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"name":"Build","qualname":"::Build","value":"Build {  }","parent":null,"children":[{"krate":0,"index":145},{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":155},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":161},{"krate":0,"index":163},{"krate":0,"index":165},{"krate":0,"index":167},{"krate":0,"index":169},{"krate":0,"index":171},{"krate":0,"index":173},{"krate":0,"index":175},{"krate":0,"index":177},{"krate":0,"index":179},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201}],"decl_id":null,"docs":" A builder for compilation of a native static library.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":308},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4298,"byte_end":4303,"line_start":143,"line_end":143,"column_start":12,"column_end":17},"name":"Error","qualname":"::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":215}],"decl_id":null,"docs":" Represents an internal error that occurred, with an explanation.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":318},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5193,"byte_end":5197,"line_start":173,"line_end":173,"column_start":12,"column_end":16},"name":"Tool","qualname":"::Tool","value":"Tool {  }","parent":null,"children":[{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231}],"decl_id":null,"docs":" Configuration used to represent an invocation of a C compiler.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9012,"byte_end":9015,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"name":"new","qualname":"<Build>::new","value":"fn () -> Build","parent":null,"children":[],"decl_id":null,"docs":" Construct a new instance of a blank set of configuration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10421,"byte_end":10428,"line_start":348,"line_end":348,"column_start":12,"column_end":19},"name":"include","qualname":"<Build>::include","value":"fn <P> (&mut self, dir: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add a directory to the `-I` or include path for headers","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10850,"byte_end":10856,"line_start":364,"line_end":364,"column_start":12,"column_end":18},"name":"define","qualname":"<Build>::define","value":"fn <'a, V> (&mut self, var: &str, val: V) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Specify a `-D` variable with an optional value.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":110},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11110,"byte_end":11116,"line_start":371,"line_end":371,"column_start":12,"column_end":18},"name":"object","qualname":"<Build>::object","value":"fn <P> (&mut self, obj: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add an arbitrary object file to link in\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11508,"byte_end":11512,"line_start":386,"line_end":386,"column_start":12,"column_end":16},"name":"flag","qualname":"<Build>::flag","value":"fn (&mut self, flag: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add an arbitrary flag to the invocation of the compiler","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12694,"byte_end":12711,"line_start":421,"line_end":421,"column_start":12,"column_end":29},"name":"is_flag_supported","qualname":"<Build>::is_flag_supported","value":"fn (&self, flag: &str) -> Result<bool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Run the compiler to test if it accepts the given flag.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14699,"byte_end":14716,"line_start":478,"line_end":478,"column_start":12,"column_end":29},"name":"flag_if_supported","qualname":"<Build>::flag_if_supported","value":"fn (&mut self, flag: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add an arbitrary flag to the invocation of the compiler if it supports it","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15206,"byte_end":15217,"line_start":497,"line_end":497,"column_start":12,"column_end":23},"name":"shared_flag","qualname":"<Build>::shared_flag","value":"fn (&mut self, shared_flag: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set the `-shared` flag.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15711,"byte_end":15722,"line_start":516,"line_end":516,"column_start":12,"column_end":23},"name":"static_flag","qualname":"<Build>::static_flag","value":"fn (&mut self, static_flag: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set the `-static` flag.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15888,"byte_end":15892,"line_start":522,"line_end":522,"column_start":12,"column_end":16},"name":"file","qualname":"<Build>::file","value":"fn <P> (&mut self, p: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add a file which will be compiled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16065,"byte_end":16070,"line_start":528,"line_end":528,"column_start":12,"column_end":17},"name":"files","qualname":"<Build>::files","value":"fn <P> (&mut self, p: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Add files which will be compiled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16407,"byte_end":16410,"line_start":543,"line_end":543,"column_start":12,"column_end":15},"name":"cpp","qualname":"<Build>::cpp","value":"fn (&mut self, cpp: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set C++ support.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16877,"byte_end":16881,"line_start":556,"line_end":556,"column_start":12,"column_end":16},"name":"cuda","qualname":"<Build>::cuda","value":"fn (&mut self, cuda: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set CUDA C++ support.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17640,"byte_end":17660,"line_start":583,"line_end":583,"column_start":12,"column_end":32},"name":"warnings_into_errors","qualname":"<Build>::warnings_into_errors","value":"fn (&mut self, warnings_into_errors: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set warnings into errors flag.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18161,"byte_end":18169,"line_start":604,"line_end":604,"column_start":12,"column_end":20},"name":"warnings","qualname":"<Build>::warnings","value":"fn (&mut self, warnings: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set warnings flags.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18741,"byte_end":18755,"line_start":627,"line_end":627,"column_start":12,"column_end":26},"name":"extra_warnings","qualname":"<Build>::extra_warnings","value":"fn (&mut self, warnings: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set extra warnings flags.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19846,"byte_end":19861,"line_start":659,"line_end":659,"column_start":12,"column_end":27},"name":"cpp_link_stdlib","qualname":"<Build>::cpp_link_stdlib","value":"fn <'a, V> (&mut self, cpp_link_stdlib: V) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Set the standard library to link against when compiling with C++\n support.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":21290,"byte_end":21304,"line_start":700,"line_end":700,"column_start":12,"column_end":26},"name":"cpp_set_stdlib","qualname":"<Build>::cpp_set_stdlib","value":"fn <'a, V> (&mut self, cpp_set_stdlib: V) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Force the C++ compiler to use the specified standard library.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22025,"byte_end":22031,"line_start":723,"line_end":723,"column_start":12,"column_end":18},"name":"target","qualname":"<Build>::target","value":"fn (&mut self, target: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the target this configuration will be compiling for.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22561,"byte_end":22565,"line_start":741,"line_end":741,"column_start":12,"column_end":16},"name":"host","qualname":"<Build>::host","value":"fn (&mut self, host: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the host assumed by this configuration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":22918,"byte_end":22927,"line_start":750,"line_end":750,"column_start":12,"column_end":21},"name":"opt_level","qualname":"<Build>::opt_level","value":"fn (&mut self, opt_level: u32) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the optimization level of the generated object files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23294,"byte_end":23307,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"opt_level_str","qualname":"<Build>::opt_level_str","value":"fn (&mut self, opt_level: &str) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the optimization level of the generated object files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":23757,"byte_end":23762,"line_start":770,"line_end":770,"column_start":12,"column_end":17},"name":"debug","qualname":"<Build>::debug","value":"fn (&mut self, debug: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the compiler will emit debug information when\n generating object files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24140,"byte_end":24147,"line_start":780,"line_end":780,"column_start":12,"column_end":19},"name":"out_dir","qualname":"<Build>::out_dir","value":"fn <P> (&mut self, out_dir: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the output directory where all object files and static\n libraries will be located.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24533,"byte_end":24541,"line_start":790,"line_end":790,"column_start":12,"column_end":20},"name":"compiler","qualname":"<Build>::compiler","value":"fn <P> (&mut self, compiler: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the compiler to be used to produce output.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":24923,"byte_end":24931,"line_start":800,"line_end":800,"column_start":12,"column_end":20},"name":"archiver","qualname":"<Build>::archiver","value":"fn <P> (&mut self, archiver: P) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures the tool used to assemble archives.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25541,"byte_end":25555,"line_start":814,"line_end":814,"column_start":12,"column_end":26},"name":"cargo_metadata","qualname":"<Build>::cargo_metadata","value":"fn (&mut self, cargo_metadata: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Define whether metadata should be emitted for cargo allowing it to\n automatically link the binary. Defaults to `true`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":25878,"byte_end":25881,"line_start":823,"line_end":823,"column_start":12,"column_end":15},"name":"pic","qualname":"<Build>::pic","value":"fn (&mut self, pic: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the compiler will emit position independent code.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26496,"byte_end":26503,"line_start":838,"line_end":838,"column_start":12,"column_end":19},"name":"use_plt","qualname":"<Build>::use_plt","value":"fn (&mut self, use_plt: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the Procedure Linkage Table is used for indirect\n calls into shared libraries.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26786,"byte_end":26796,"line_start":846,"line_end":846,"column_start":12,"column_end":22},"name":"static_crt","qualname":"<Build>::static_crt","value":"fn (&mut self, static_crt: bool) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":" Configures whether the /MT flag or the /MD flag will be passed to msvc build tools.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":26936,"byte_end":26945,"line_start":852,"line_end":852,"column_start":12,"column_end":21},"name":"__set_env","qualname":"<Build>::__set_env","value":"fn <A, B> (&mut self, a: A, b: B) -> &mut Build","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":27332,"byte_end":27343,"line_start":865,"line_end":865,"column_start":12,"column_end":23},"name":"try_compile","qualname":"<Build>::try_compile","value":"fn (&self, output: &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Run the compiler, generating the file `output`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":30558,"byte_end":30565,"line_start":949,"line_end":949,"column_start":12,"column_end":19},"name":"compile","qualname":"<Build>::compile","value":"fn (&self, output: &str) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Run the compiler, generating the file `output`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":32834,"byte_end":32844,"line_start":1017,"line_end":1017,"column_start":12,"column_end":22},"name":"try_expand","qualname":"<Build>::try_expand","value":"fn (&self) -> Result<Vec<u8>, Error>","parent":null,"children":[],"decl_id":null,"docs":" This will return a result instead of panicing; see expand() for the complete description.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":33993,"byte_end":33999,"line_start":1056,"line_end":1056,"column_start":12,"column_end":18},"name":"expand","qualname":"<Build>::expand","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Run the compiler, returning the macro-expanded version of the input files.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35096,"byte_end":35108,"line_start":1081,"line_end":1081,"column_start":12,"column_end":24},"name":"get_compiler","qualname":"<Build>::get_compiler","value":"fn (&self) -> Tool","parent":null,"children":[],"decl_id":null,"docs":" Get the compiler that's in use for this configuration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":35439,"byte_end":35455,"line_start":1091,"line_end":1091,"column_start":12,"column_end":28},"name":"try_get_compiler","qualname":"<Build>::try_get_compiler","value":"fn (&self) -> Result<Tool, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the compiler that's in use for this configuration.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":76624,"byte_end":76634,"line_start":2112,"line_end":2112,"column_start":12,"column_end":22},"name":"to_command","qualname":"<Tool>::to_command","value":"fn (&self) -> Command","parent":null,"children":[],"decl_id":null,"docs":" Converts this compiler into a `Command` that's ready to be run.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":77437,"byte_end":77441,"line_start":2136,"line_end":2136,"column_start":12,"column_end":16},"name":"path","qualname":"<Tool>::path","value":"fn (&self) -> &Path","parent":null,"children":[],"decl_id":null,"docs":" Returns the path for this compiler.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":77636,"byte_end":77640,"line_start":2142,"line_end":2142,"column_start":12,"column_end":16},"name":"args","qualname":"<Tool>::args","value":"fn (&self) -> &[OsString]","parent":null,"children":[],"decl_id":null,"docs":" Returns the default set of arguments to the compiler needed to produce\n executables for the target this compiler generates.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":246},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":77870,"byte_end":77873,"line_start":2150,"line_end":2150,"column_start":12,"column_end":15},"name":"env","qualname":"<Tool>::env","value":"fn (&self) -> &[(OsString, OsString)]","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of environment variables needed for this compiler to\n operate.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":78130,"byte_end":78136,"line_start":2158,"line_end":2158,"column_start":12,"column_end":18},"name":"cc_env","qualname":"<Tool>::cc_env","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the compiler command in format of CC environment variable.\n Or empty string if CC env was not present","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":78901,"byte_end":78911,"line_start":2177,"line_end":2177,"column_start":12,"column_end":22},"name":"cflags_env","qualname":"<Tool>::cflags_env","value":"fn (&self) -> OsString","parent":null,"children":[],"decl_id":null,"docs":" Returns the compiler flags in format of CFLAGS environment variable.\n Important here - this will not be CFLAGS from env, its internal gcc's flags to use as CFLAGS\n This is typically used by configure script\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":79228,"byte_end":79239,"line_start":2189,"line_end":2189,"column_start":12,"column_end":23},"name":"is_like_gnu","qualname":"<Tool>::is_like_gnu","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the tool is GNU Compiler Collection-like.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":79354,"byte_end":79367,"line_start":2194,"line_end":2194,"column_start":12,"column_end":25},"name":"is_like_clang","qualname":"<Tool>::is_like_clang","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the tool is Clang-like.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":79483,"byte_end":79495,"line_start":2199,"line_end":2199,"column_start":12,"column_end":24},"name":"is_like_msvc","qualname":"<Tool>::is_like_msvc","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the tool is MSVC-like.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4456,"byte_end":4461,"line_start":150,"line_end":150,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4643,"byte_end":4648,"line_start":159,"line_end":159,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6012,"byte_end":6022,"line_start":200,"line_end":200,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":90},{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8627,"byte_end":8633,"line_start":286,"line_end":286,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8793,"byte_end":8798,"line_start":293,"line_end":293,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":148},{"krate":0,"index":150},{"krate":0,"index":152},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":162},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":176},{"krate":0,"index":178},{"krate":0,"index":180},{"krate":0,"index":182},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214},{"krate":0,"index":216},{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":74469,"byte_end":74474,"line_start":2049,"line_end":2049,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":228}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":74540,"byte_end":74544,"line_start":2055,"line_end":2055,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":240},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2431,"byte_end":2447,"line_start":86,"line_end":86,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":58}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4456,"byte_end":4461,"line_start":150,"line_end":150,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":308},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":4643,"byte_end":4648,"line_start":159,"line_end":159,"column_start":26,"column_end":31},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":308},"to":{"krate":2,"index":2634}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6012,"byte_end":6022,"line_start":200,"line_end":200,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8627,"byte_end":8633,"line_start":286,"line_end":286,"column_start":6,"column_end":12},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8793,"byte_end":8798,"line_start":293,"line_end":293,"column_start":6,"column_end":11},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":74469,"byte_end":74474,"line_start":2049,"line_end":2049,"column_start":18,"column_end":23},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":288},"to":{"krate":2,"index":2612}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,99,99,45,49,46,48,46,50,57,47,115,114,99,47,108,105,98,46,114,115],"byte_start":74540,"byte_end":74544,"line_start":2055,"line_end":2055,"column_start":6,"column_end":10},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}}]}