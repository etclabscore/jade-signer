{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51],"program":"/home/k2/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","block_cipher_trait","/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/block-cipher-trait-0.5.3/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=3ddedb7af6158d3c","-C","extra-filename=-3ddedb7af6158d3c","--out-dir","/home/k2/Workbench/jade-signer/target/rls/debug/deps","-L","dependency=/home/k2/Workbench/jade-signer/target/rls/debug/deps","--extern","generic_array=/home/k2/Workbench/jade-signer/target/rls/debug/deps/libgeneric_array-9c9dc3188f0b055d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/k2/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,107,50,47,87,111,114,107,98,101,110,99,104,47,106,97,100,101,45,115,105,103,110,101,114,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,98,108,111,99,107,95,99,105,112,104,101,114,95,116,114,97,105,116,45,51,100,100,101,100,98,55,97,102,54,49,53,56,100,51,99,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"block_cipher_trait","disambiguator":[16086928721016211650,4359016775746016479]},"crate_root":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/block-cipher-trait-0.5.3/src","external_crates":[{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/block-cipher-trait-0.5.3/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[4460275713293065345,16951895692468253576]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/block-cipher-trait-0.5.3/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[11180861269583930402,7218748977825450810]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/block-cipher-trait-0.5.3/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[4642033898704731799,9729154345420223309]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/block-cipher-trait-0.5.3/src/lib.rs","num":4,"id":{"name":"generic_array","disambiguator":[15367302505379194125,4364600630425952605]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/block-cipher-trait-0.5.3/src/lib.rs","num":5,"id":{"name":"typenum","disambiguator":[9619147783140956088,642700011998169051]}}],"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2470,"line_start":1,"line_end":73,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":337,"byte_end":353,"line_start":16,"line_end":16,"column_start":17,"column_end":33},"alias_span":null,"name":"InvalidKeyLength","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":0,"byte_end":2470,"line_start":1,"line_end":73,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/block-cipher-trait-0.5.3/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":30}],"decl_id":null,"docs":" This crate defines a set of simple traits used to define functionality of\n block ciphers.\n","sig":null,"attributes":[{"value":"no_std","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":97,"byte_end":107,"line_start":3,"line_end":3,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,101,114,114,111,114,115,46,114,115],"byte_start":2629,"byte_end":2645,"line_start":7,"line_end":7,"column_start":12,"column_end":28},"name":"InvalidKeyLength","qualname":"::errors::InvalidKeyLength","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error struct which used with `NewVarKey`\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,101,114,114,111,114,115,46,114,115],"byte_start":2618,"byte_end":2646,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,101,114,114,111,114,115,46,114,115],"byte_start":2618,"byte_end":2646,"line_start":7,"line_end":7,"column_start":1,"column_end":29}}]},{"kind":"Trait","id":{"krate":0,"index":30},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":544,"byte_end":555,"line_start":22,"line_end":22,"column_start":11,"column_end":22},"name":"BlockCipher","qualname":"::BlockCipher","value":"BlockCipher: core::marker::Sized","parent":null,"children":[{"krate":0,"index":32},{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48}],"decl_id":null,"docs":" The trait which defines in-place encryption and decryption\n over single block or several blocks in parallel.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":661,"byte_end":668,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"KeySize","qualname":"::BlockCipher::KeySize","value":"type KeySize: ArrayLength<u8>;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Key size in bytes with which cipher guaranteed to be initialized\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":731,"byte_end":740,"line_start":26,"line_end":26,"column_start":10,"column_end":19},"name":"BlockSize","qualname":"::BlockCipher::BlockSize","value":"type BlockSize: ArrayLength<u8>;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Size of the block in bytes\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":861,"byte_end":870,"line_start":29,"line_end":29,"column_start":10,"column_end":19},"name":"ParBlocks","qualname":"::BlockCipher::ParBlocks","value":"type ParBlocks: ArrayLength<GenericArray<u8, Self::BlockSize>>;","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Number of blocks which can be processed in parallel by\n cipher implementation\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":995,"byte_end":998,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"new","qualname":"::BlockCipher::new","value":"fn (key: &GenericArray<u8, Self::KeySize>) -> Self","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Create new block cipher instance from key with fixed size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":40},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1276,"byte_end":1286,"line_start":38,"line_end":38,"column_start":8,"column_end":18},"name":"new_varkey","qualname":"::BlockCipher::new_varkey","value":"fn (key: &[u8]) -> Result<Self, InvalidKeyLength>","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Create new block cipher instance from key with variable size.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1550,"byte_end":1563,"line_start":47,"line_end":47,"column_start":8,"column_end":21},"name":"encrypt_block","qualname":"::BlockCipher::encrypt_block","value":"fn (&self, block: &mut GenericArray<u8, Self::BlockSize>) -> ()","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Encrypt block in-place\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":44},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1658,"byte_end":1671,"line_start":50,"line_end":50,"column_start":8,"column_end":21},"name":"decrypt_block","qualname":"::BlockCipher::decrypt_block","value":"fn (&self, block: &mut GenericArray<u8, Self::BlockSize>) -> ()","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Decrypt block in-place\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1928,"byte_end":1942,"line_start":57,"line_end":57,"column_start":8,"column_end":22},"name":"encrypt_blocks","qualname":"::BlockCipher::encrypt_blocks","value":"fn (&self, blocks: &mut ParBlocks<Self::BlockSize, Self::ParBlocks>) -> ()","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Encrypt several blocks in parallel using instruction level parallelism\n if possible.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1911,"byte_end":1920,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2299,"byte_end":2313,"line_start":68,"line_end":68,"column_start":8,"column_end":22},"name":"decrypt_blocks","qualname":"::BlockCipher::decrypt_blocks","value":"fn (&self, blocks: &mut ParBlocks<Self::BlockSize, Self::ParBlocks>) -> ()","parent":{"krate":0,"index":30},"children":[],"decl_id":null,"docs":" Decrypt several blocks in parallel using instruction level parallelism\n if possible.","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2282,"byte_end":2291,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,101,114,114,111,114,115,46,114,115],"byte_start":2670,"byte_end":2686,"line_start":9,"line_end":9,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,101,114,114,111,114,115,46,114,115],"byte_start":2670,"byte_end":2686,"line_start":9,"line_end":9,"column_start":23,"column_end":39},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":50},"to":{"krate":1,"index":8404}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,98,108,111,99,107,45,99,105,112,104,101,114,45,116,114,97,105,116,45,48,46,53,46,51,47,115,114,99,47,108,105,98,46,114,115],"byte_start":571,"byte_end":576,"line_start":22,"line_end":22,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":1686},"to":{"krate":0,"index":30}}]}