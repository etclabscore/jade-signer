{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50],"program":"/home/k2/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","secp256k1","/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"rand\"","-C","metadata=37325e4ebbbd8975","-C","extra-filename=-37325e4ebbbd8975","--out-dir","/home/k2/Workbench/jade-signer/target/rls/debug/deps","-L","dependency=/home/k2/Workbench/jade-signer/target/rls/debug/deps","--extern","libc=/home/k2/Workbench/jade-signer/target/rls/debug/deps/liblibc-c52c5ac48032aec9.rmeta","--extern","rand=/home/k2/Workbench/jade-signer/target/rls/debug/deps/librand-d8e403f6976f980e.rmeta","--cap-lints","allow","-L","native=/home/k2/Workbench/jade-signer/target/rls/debug/build/secp256k1-e91462c1ab5a92f0/out","-l","static=secp256k1","--error-format=json","--sysroot","/home/k2/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,107,50,47,87,111,114,107,98,101,110,99,104,47,106,97,100,101,45,115,105,103,110,101,114,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,115,101,99,112,50,53,54,107,49,45,51,55,51,50,53,101,52,101,98,98,98,100,56,57,55,53,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"secp256k1","disambiguator":[11657563945946910418,17896763780933207776]},"crate_root":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src","external_crates":[{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7643654914076001483,12823312228256817667]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4460275713293065345,16951895692468253576]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11180861269583930402,7218748977825450810]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4642033898704731799,9729154345420223309]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12818274104326731107,682062526801359143]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12755702926841618597,12055052820604553981]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[1437492519896548358,983587994810570921]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[15755932282147130284,14837425147787014863]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[14848937618377221952,4542086914855755700]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[1423741341053305533,4588337216884661599]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":11,"id":{"name":"rand","disambiguator":[9879811312924775767,12882928496154350611]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":12,"id":{"name":"rand","disambiguator":[10997269096596746893,15653062839108123385]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","num":13,"id":{"name":"libc","disambiguator":[1828997127759121944,2360046500166115577]}}],"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":502,"byte_end":37741,"line_start":16,"line_end":1007,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1588,"byte_end":1597,"line_start":57,"line_end":57,"column_start":14,"column_end":23},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":796},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1612,"byte_end":1621,"line_start":58,"line_end":58,"column_start":14,"column_end":23},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":502,"byte_end":37741,"line_start":16,"line_end":1007,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":22},{"krate":0,"index":24},{"krate":0,"index":32},{"krate":0,"index":54},{"krate":0,"index":102},{"krate":0,"index":170},{"krate":0,"index":242},{"krate":0,"index":286},{"krate":0,"index":288},{"krate":0,"index":906},{"krate":0,"index":926},{"krate":0,"index":922},{"krate":0,"index":916},{"krate":0,"index":912},{"krate":0,"index":908},{"krate":0,"index":928},{"krate":0,"index":948},{"krate":0,"index":944},{"krate":0,"index":938},{"krate":0,"index":934},{"krate":0,"index":930},{"krate":0,"index":950},{"krate":0,"index":970},{"krate":0,"index":966},{"krate":0,"index":960},{"krate":0,"index":956},{"krate":0,"index":952},{"krate":0,"index":290},{"krate":0,"index":296},{"krate":0,"index":314},{"krate":0,"index":318},{"krate":0,"index":328},{"krate":0,"index":332},{"krate":0,"index":338},{"krate":0,"index":344},{"krate":0,"index":350},{"krate":0,"index":356},{"krate":0,"index":972},{"krate":0,"index":974},{"krate":0,"index":984},{"krate":0,"index":988},{"krate":0,"index":990},{"krate":0,"index":994},{"krate":0,"index":998},{"krate":0,"index":1006},{"krate":0,"index":1012},{"krate":0,"index":1018},{"krate":0,"index":1024},{"krate":0,"index":1030},{"krate":0,"index":1036},{"krate":0,"index":358},{"krate":0,"index":362},{"krate":0,"index":1040},{"krate":0,"index":1058},{"krate":0,"index":1054},{"krate":0,"index":1050},{"krate":0,"index":1046},{"krate":0,"index":1042},{"krate":0,"index":366},{"krate":0,"index":370},{"krate":0,"index":376},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":1060},{"krate":0,"index":1076},{"krate":0,"index":1072},{"krate":0,"index":1070},{"krate":0,"index":1066},{"krate":0,"index":1062},{"krate":0,"index":382},{"krate":0,"index":386},{"krate":0,"index":390},{"krate":0,"index":394},{"krate":0,"index":396},{"krate":0,"index":400},{"krate":0,"index":404}],"decl_id":null,"docs":" # Secp256k1\n Rust bindings for Pieter Wuille's secp256k1 library, which is used for\n fast and accurate manipulation of ECDSA signatures on the secp256k1\n curve. Such signatures are used extensively by the Bitcoin network\n and its derivatives.","sig":null,"attributes":[{"value":"crate_type = \"lib\"","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":766,"byte_end":788,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"crate_type = \"rlib\"","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":789,"byte_end":812,"line_start":24,"line_end":24,"column_start":1,"column_end":24}},{"value":"crate_type = \"dylib\"","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":813,"byte_end":837,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"crate_name = \"secp256k1\"","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":838,"byte_end":866,"line_start":26,"line_end":26,"column_start":1,"column_end":29}},{"value":"deny(non_upper_case_globals)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":890,"byte_end":922,"line_start":29,"line_end":29,"column_start":1,"column_end":33}},{"value":"deny(non_camel_case_types)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":923,"byte_end":953,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"deny(non_snake_case)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":954,"byte_end":978,"line_start":31,"line_end":31,"column_start":1,"column_end":25}},{"value":"deny(unused_mut)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":979,"byte_end":999,"line_start":32,"line_end":32,"column_start":1,"column_end":21}},{"value":"warn(missing_docs)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1000,"byte_end":1022,"line_start":33,"line_end":33,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":32},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constants","qualname":"::constants","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/constants.rs","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":44},{"krate":0,"index":46},{"krate":0,"index":48},{"krate":0,"index":50},{"krate":0,"index":52}],"decl_id":null,"docs":" # Constants\n Constants related to the API and the underlying curve\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":34},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":43184,"byte_end":43196,"line_start":20,"line_end":20,"column_start":11,"column_end":23},"name":"MESSAGE_SIZE","qualname":"::constants::MESSAGE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a message\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":36},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":43261,"byte_end":43276,"line_start":23,"line_end":23,"column_start":11,"column_end":26},"name":"SECRET_KEY_SIZE","qualname":"::constants::SECRET_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a secret key\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":38},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":43353,"byte_end":43368,"line_start":26,"line_end":26,"column_start":11,"column_end":26},"name":"PUBLIC_KEY_SIZE","qualname":"::constants::PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of a serialized public key.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":40},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":43458,"byte_end":43486,"line_start":29,"line_end":29,"column_start":11,"column_end":39},"name":"UNCOMPRESSED_PUBLIC_KEY_SIZE","qualname":"::constants::UNCOMPRESSED_PUBLIC_KEY_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size (in bytes) of an serialized uncompressed public key\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":42},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":43547,"byte_end":43565,"line_start":32,"line_end":32,"column_start":11,"column_end":29},"name":"MAX_SIGNATURE_SIZE","qualname":"::constants::MAX_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a signature\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":44},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":43626,"byte_end":43648,"line_start":35,"line_end":35,"column_start":11,"column_end":33},"name":"SCHNORR_SIGNATURE_SIZE","qualname":"::constants::SCHNORR_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The size of a Schnorr signature\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":46},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":43717,"byte_end":43739,"line_start":38,"line_end":38,"column_start":11,"column_end":33},"name":"COMPACT_SIGNATURE_SIZE","qualname":"::constants::COMPACT_SIGNATURE_SIZE","value":"usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum size of a compact signature\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":48},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":43801,"byte_end":43812,"line_start":41,"line_end":41,"column_start":11,"column_end":22},"name":"CURVE_ORDER","qualname":"::constants::CURVE_ORDER","value":"[u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" The order of the secp256k1 curve\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":44086,"byte_end":44097,"line_start":49,"line_end":49,"column_start":11,"column_end":22},"name":"GENERATOR_X","qualname":"::constants::GENERATOR_X","value":"[u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" The X coordinate of the generator\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":52},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,99,111,110,115,116,97,110,116,115,46,114,115],"byte_start":44371,"byte_end":44382,"line_start":57,"line_end":57,"column_start":11,"column_end":22},"name":"GENERATOR_Y","qualname":"::constants::GENERATOR_Y","value":"[u8; 32]","parent":null,"children":[],"decl_id":null,"docs":" The Y coordinate of the generator\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":54},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ecdh","qualname":"::ecdh","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/ecdh.rs","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":58},{"krate":0,"index":60},{"krate":0,"index":66},{"krate":0,"index":424},{"krate":0,"index":444},{"krate":0,"index":440},{"krate":0,"index":434},{"krate":0,"index":430},{"krate":0,"index":426},{"krate":0,"index":68},{"krate":0,"index":74},{"krate":0,"index":78},{"krate":0,"index":84},{"krate":0,"index":90},{"krate":0,"index":96}],"decl_id":null,"docs":" # ECDH\n Support for shared secret computations","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":424},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":45350,"byte_end":45362,"line_start":27,"line_end":27,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::ecdh::SharedSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" A tag used for recovering the public key from a compact signature\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":45339,"byte_end":45382,"line_start":27,"line_end":27,"column_start":1,"column_end":44}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":45339,"byte_end":45382,"line_start":27,"line_end":27,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":45494,"byte_end":45497,"line_start":32,"line_end":32,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"fn (secp: &Secp256k1, point: &PublicKey, scalar: &SecretKey) -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Creates a new shared secret from a pubkey and secret key\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":45473,"byte_end":45482,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":45913,"byte_end":45919,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<SharedSecret>::as_ptr","value":"fn (&self) -> *const ffi::SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":45892,"byte_end":45901,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":102},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ffi","qualname":"::ffi","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/ffi.rs","parent":null,"children":[{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":120},{"krate":0,"index":122},{"krate":0,"index":124},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":130},{"krate":0,"index":446},{"krate":0,"index":452},{"krate":0,"index":448},{"krate":0,"index":132},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":468},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":478},{"krate":0,"index":482},{"krate":0,"index":490},{"krate":0,"index":496},{"krate":0,"index":502},{"krate":0,"index":508},{"krate":0,"index":514},{"krate":0,"index":520},{"krate":0,"index":134},{"krate":0,"index":140},{"krate":0,"index":144},{"krate":0,"index":524},{"krate":0,"index":526},{"krate":0,"index":536},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":546},{"krate":0,"index":550},{"krate":0,"index":558},{"krate":0,"index":564},{"krate":0,"index":570},{"krate":0,"index":576},{"krate":0,"index":582},{"krate":0,"index":588},{"krate":0,"index":146},{"krate":0,"index":592},{"krate":0,"index":594},{"krate":0,"index":604},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":614},{"krate":0,"index":618},{"krate":0,"index":626},{"krate":0,"index":632},{"krate":0,"index":638},{"krate":0,"index":644},{"krate":0,"index":650},{"krate":0,"index":656},{"krate":0,"index":148},{"krate":0,"index":154},{"krate":0,"index":160},{"krate":0,"index":660},{"krate":0,"index":662},{"krate":0,"index":672},{"krate":0,"index":676},{"krate":0,"index":678},{"krate":0,"index":682},{"krate":0,"index":686},{"krate":0,"index":694},{"krate":0,"index":700},{"krate":0,"index":706},{"krate":0,"index":712},{"krate":0,"index":718},{"krate":0,"index":724},{"krate":0,"index":162},{"krate":0,"index":168}],"decl_id":null,"docs":" # FFI bindings\n Direct bindings to the underlying C library functions. These should\n not be needed for most users.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":120},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":48796,"byte_end":48816,"line_start":25,"line_end":25,"column_start":11,"column_end":31},"name":"SECP256K1_START_NONE","qualname":"::ffi::SECP256K1_START_NONE","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for context to enable no precomputation\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":122},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":48910,"byte_end":48932,"line_start":27,"line_end":27,"column_start":11,"column_end":33},"name":"SECP256K1_START_VERIFY","qualname":"::ffi::SECP256K1_START_VERIFY","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for context to enable verification precomputation\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":124},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":49028,"byte_end":49048,"line_start":29,"line_end":29,"column_start":11,"column_end":31},"name":"SECP256K1_START_SIGN","qualname":"::ffi::SECP256K1_START_SIGN","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for context to enable signing precomputation\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":126},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":49154,"byte_end":49180,"line_start":31,"line_end":31,"column_start":11,"column_end":37},"name":"SECP256K1_SER_UNCOMPRESSED","qualname":"::ffi::SECP256K1_SER_UNCOMPRESSED","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for keys to indicate uncompressed serialization format\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":128},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":49277,"byte_end":49301,"line_start":33,"line_end":33,"column_start":11,"column_end":35},"name":"SECP256K1_SER_COMPRESSED","qualname":"::ffi::SECP256K1_SER_COMPRESSED","value":"c_uint","parent":null,"children":[],"decl_id":null,"docs":" Flag for keys to indicate compressed serialization format\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":130},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":49772,"byte_end":49779,"line_start":42,"line_end":42,"column_start":10,"column_end":17},"name":"NonceFn","qualname":"::ffi::NonceFn","value":"unsafe extern \"C\" fn(nonce32: *mut c_uchar, msg32: *const c_uchar,\n                     key32: *const c_uchar, algo16: *const c_uchar,\n                     attempt: c_uint, data: *const c_void)","parent":null,"children":[],"decl_id":null,"docs":" A nonce generation function. Ordinary users of the library\n never need to see this type; only if you need to control\n nonce generation do you need to use it. I have deliberately\n made this hard to do: you have to write your own wrapper\n around the FFI functions to use it. And it's an unsafe type.\n Nonces are generated deterministically by RFC6979 by\n default; there should be no need to ever change this.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":446},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50459,"byte_end":50466,"line_start":55,"line_end":55,"column_start":23,"column_end":30},"name":"Context","qualname":"::ffi::Context","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Secp256k1 context, containing various precomputed values and such\n needed to do elliptic curve computations. If you create one of these\n with `secp256k1_context_create` you MUST destroy it with\n `secp256k1_context_destroy`, or else you will have a memory leak.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50437,"byte_end":50447,"line_start":55,"line_end":55,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":132},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50560,"byte_end":50569,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::ffi::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Library-internal representation of a Secp256k1 public key\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50538,"byte_end":50548,"line_start":58,"line_end":58,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50758,"byte_end":50761,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<PublicKey>::new","value":"fn () -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Create a new (zeroed) public key usable for the FFI interface\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50895,"byte_end":50900,"line_start":67,"line_end":67,"column_start":19,"column_end":24},"name":"blank","qualname":"<PublicKey>::blank","value":"fn () -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Create a new (uninitialized) public key usable for the FFI interface\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":144},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51150,"byte_end":51159,"line_start":78,"line_end":78,"column_start":12,"column_end":21},"name":"Signature","qualname":"::ffi::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Library-internal representation of a Secp256k1 signature\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51128,"byte_end":51138,"line_start":77,"line_end":77,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":146},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51347,"byte_end":51367,"line_start":84,"line_end":84,"column_start":12,"column_end":32},"name":"RecoverableSignature","qualname":"::ffi::RecoverableSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" Library-internal representation of a Secp256k1 signature + recovery ID\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51325,"byte_end":51335,"line_start":83,"line_end":83,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51577,"byte_end":51580,"line_start":90,"line_end":90,"column_start":12,"column_end":15},"name":"new","qualname":"<Signature>::new","value":"fn () -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a new (zeroed) signature usable for the FFI interface\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51713,"byte_end":51718,"line_start":92,"line_end":92,"column_start":19,"column_end":24},"name":"blank","qualname":"<Signature>::blank","value":"fn () -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Create a new (uninitialized) signature usable for the FFI interface\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":156},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51870,"byte_end":51873,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"new","qualname":"<RecoverableSignature>::new","value":"fn () -> RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Create a new (zeroed) signature usable for the FFI interface\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52028,"byte_end":52033,"line_start":99,"line_end":99,"column_start":19,"column_end":24},"name":"blank","qualname":"<RecoverableSignature>::blank","value":"fn () -> RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Create a new (uninitialized) signature usable for the FFI interface\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52171,"byte_end":52183,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"SharedSecret","qualname":"::ffi::SharedSecret","value":"","parent":null,"children":[],"decl_id":null,"docs":" Library-internal representation of an ECDH shared secret\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52149,"byte_end":52159,"line_start":103,"line_end":103,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52380,"byte_end":52383,"line_start":110,"line_end":110,"column_start":12,"column_end":15},"name":"new","qualname":"<SharedSecret>::new","value":"fn () -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Create a new (zeroed) signature usable for the FFI interface\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52522,"byte_end":52527,"line_start":112,"line_end":112,"column_start":19,"column_end":24},"name":"blank","qualname":"<SharedSecret>::blank","value":"fn () -> SharedSecret","parent":null,"children":[],"decl_id":null,"docs":" Create a new (uninitialized) signature usable for the FFI interface\n","sig":null,"attributes":[]},{"kind":"ForeignStatic","id":{"krate":0,"index":59},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52638,"byte_end":52670,"line_start":117,"line_end":117,"column_start":16,"column_end":48},"name":"secp256k1_nonce_function_rfc6979","qualname":"::ffi::::secp256k1_nonce_function_rfc6979","value":"NonceFn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignStatic","id":{"krate":0,"index":61},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52697,"byte_end":52729,"line_start":119,"line_end":119,"column_start":16,"column_end":48},"name":"secp256k1_nonce_function_default","qualname":"::ffi::::secp256k1_nonce_function_default","value":"NonceFn","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":63},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52768,"byte_end":52792,"line_start":122,"line_end":122,"column_start":12,"column_end":36},"name":"secp256k1_context_create","qualname":"::ffi::::secp256k1_context_create","value":"fn (flags: c_uint) -> *mut Context","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":65},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52837,"byte_end":52860,"line_start":124,"line_end":124,"column_start":12,"column_end":35},"name":"secp256k1_context_clone","qualname":"::ffi::::secp256k1_context_clone","value":"fn (cx: *mut Context) -> *mut Context","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":67},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52908,"byte_end":52933,"line_start":126,"line_end":126,"column_start":12,"column_end":37},"name":"secp256k1_context_destroy","qualname":"::ffi::::secp256k1_context_destroy","value":"fn (cx: *mut Context) -> ()","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":69},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52965,"byte_end":52992,"line_start":128,"line_end":128,"column_start":12,"column_end":39},"name":"secp256k1_context_randomize","qualname":"::ffi::::secp256k1_context_randomize","value":"fn (cx: *mut Context, seed32: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":71},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":53484,"byte_end":53509,"line_start":140,"line_end":140,"column_start":12,"column_end":37},"name":"secp256k1_ec_pubkey_parse","qualname":"::ffi::::secp256k1_ec_pubkey_parse","value":"fn (cx: *const Context, pk: *mut PublicKey, input: *const c_uchar, in_len: size_t) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":73},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":53685,"byte_end":53714,"line_start":144,"line_end":144,"column_start":12,"column_end":41},"name":"secp256k1_ec_pubkey_serialize","qualname":"::ffi::::secp256k1_ec_pubkey_serialize","value":"fn (cx: *const Context, output: *mut c_uchar, out_len: *mut size_t, pk: *const PublicKey, compressed: c_uint) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":75},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":53984,"byte_end":54019,"line_start":150,"line_end":150,"column_start":12,"column_end":47},"name":"secp256k1_ecdsa_signature_parse_der","qualname":"::ffi::::secp256k1_ecdsa_signature_parse_der","value":"fn (cx: *const Context, sig: *mut Signature, input: *const c_uchar, in_len: size_t) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":77},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":54216,"byte_end":54255,"line_start":154,"line_end":154,"column_start":12,"column_end":51},"name":"secp256k1_ecdsa_signature_parse_compact","qualname":"::ffi::::secp256k1_ecdsa_signature_parse_compact","value":"fn (cx: *const Context, sig: *mut Signature, input64: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":79},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":54446,"byte_end":54475,"line_start":158,"line_end":158,"column_start":12,"column_end":41},"name":"ecdsa_signature_parse_der_lax","qualname":"::ffi::::ecdsa_signature_parse_der_lax","value":"fn (cx: *const Context, sig: *mut Signature, input: *const c_uchar, in_len: size_t) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":81},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":54660,"byte_end":54699,"line_start":162,"line_end":162,"column_start":12,"column_end":51},"name":"secp256k1_ecdsa_signature_serialize_der","qualname":"::ffi::::secp256k1_ecdsa_signature_serialize_der","value":"fn (cx: *const Context, output: *mut c_uchar, out_len: *mut size_t, sig: *const Signature) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":83},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":54911,"byte_end":54954,"line_start":166,"line_end":166,"column_start":12,"column_end":55},"name":"secp256k1_ecdsa_signature_serialize_compact","qualname":"::ffi::::secp256k1_ecdsa_signature_serialize_compact","value":"fn (cx: *const Context, output64: *const c_uchar, sig: *const Signature) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":85},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":55156,"byte_end":55207,"line_start":170,"line_end":170,"column_start":12,"column_end":63},"name":"secp256k1_ecdsa_recoverable_signature_parse_compact","qualname":"::ffi::::secp256k1_ecdsa_recoverable_signature_parse_compact","value":"fn (cx: *const Context, sig: *mut RecoverableSignature, input64: *const c_uchar, recid: c_int) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":87},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":55447,"byte_end":55502,"line_start":174,"line_end":174,"column_start":12,"column_end":67},"name":"secp256k1_ecdsa_recoverable_signature_serialize_compact","qualname":"::ffi::::secp256k1_ecdsa_recoverable_signature_serialize_compact","value":"fn (cx: *const Context, output64: *const c_uchar, recid: *mut c_int, sig: *const RecoverableSignature) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":89},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":55758,"byte_end":55803,"line_start":178,"line_end":178,"column_start":12,"column_end":57},"name":"secp256k1_ecdsa_recoverable_signature_convert","qualname":"::ffi::::secp256k1_ecdsa_recoverable_signature_convert","value":"fn (cx: *const Context, sig: *mut Signature, input: *const RecoverableSignature) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":91},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":56017,"byte_end":56052,"line_start":182,"line_end":182,"column_start":12,"column_end":47},"name":"secp256k1_ecdsa_signature_normalize","qualname":"::ffi::::secp256k1_ecdsa_signature_normalize","value":"fn (cx: *const Context, out_sig: *mut Signature, in_sig: *const Signature) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":93},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":56253,"byte_end":56275,"line_start":187,"line_end":187,"column_start":12,"column_end":34},"name":"secp256k1_ecdsa_verify","qualname":"::ffi::::secp256k1_ecdsa_verify","value":"fn (cx: *const Context, sig: *const Signature, msg32: *const c_uchar, pk: *const PublicKey) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":95},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":56522,"byte_end":56542,"line_start":193,"line_end":193,"column_start":12,"column_end":32},"name":"secp256k1_ecdsa_sign","qualname":"::ffi::::secp256k1_ecdsa_sign","value":"fn (cx: *const Context, sig: *mut Signature, msg32: *const c_uchar, sk: *const c_uchar, noncefn: NonceFn, noncedata: *const c_void) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":97},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":56885,"byte_end":56917,"line_start":201,"line_end":201,"column_start":12,"column_end":44},"name":"secp256k1_ecdsa_sign_recoverable","qualname":"::ffi::::secp256k1_ecdsa_sign_recoverable","value":"fn (cx: *const Context, sig: *mut RecoverableSignature, msg32: *const c_uchar, sk: *const c_uchar, noncefn: NonceFn, noncedata: *const c_void) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":99},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":57343,"byte_end":57366,"line_start":209,"line_end":209,"column_start":12,"column_end":35},"name":"secp256k1_ecdsa_recover","qualname":"::ffi::::secp256k1_ecdsa_recover","value":"fn (cx: *const Context, pk: *mut PublicKey, sig: *const RecoverableSignature, msg32: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":101},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":57641,"byte_end":57663,"line_start":216,"line_end":216,"column_start":12,"column_end":34},"name":"secp256k1_schnorr_sign","qualname":"::ffi::::secp256k1_schnorr_sign","value":"fn (cx: *const Context, sig64: *mut c_uchar, msg32: *const c_uchar, sk: *const c_uchar, noncefn: NonceFn, noncedata: *const c_void) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":103},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":58018,"byte_end":58042,"line_start":224,"line_end":224,"column_start":12,"column_end":36},"name":"secp256k1_schnorr_verify","qualname":"::ffi::::secp256k1_schnorr_verify","value":"fn (cx: *const Context, sig64: *const c_uchar, msg32: *const c_uchar, pk: *const PublicKey) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":105},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":58297,"byte_end":58322,"line_start":230,"line_end":230,"column_start":12,"column_end":37},"name":"secp256k1_schnorr_recover","qualname":"::ffi::::secp256k1_schnorr_recover","value":"fn (cx: *const Context, pk: *mut PublicKey, sig64: *const c_uchar, msg32: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":107},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":58589,"byte_end":58615,"line_start":237,"line_end":237,"column_start":12,"column_end":38},"name":"secp256k1_ec_seckey_verify","qualname":"::ffi::::secp256k1_ec_seckey_verify","value":"fn (cx: *const Context, sk: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":109},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":58716,"byte_end":58742,"line_start":240,"line_end":240,"column_start":12,"column_end":38},"name":"secp256k1_ec_pubkey_create","qualname":"::ffi::::secp256k1_ec_pubkey_create","value":"fn (cx: *const Context, pk: *mut PublicKey, sk: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":111},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":58934,"byte_end":58964,"line_start":246,"line_end":246,"column_start":12,"column_end":42},"name":"secp256k1_ec_privkey_tweak_add","qualname":"::ffi::::secp256k1_ec_privkey_tweak_add","value":"fn (cx: *const Context, sk: *mut c_uchar, tweak: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":113},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":59174,"byte_end":59203,"line_start":251,"line_end":251,"column_start":12,"column_end":41},"name":"secp256k1_ec_pubkey_tweak_add","qualname":"::ffi::::secp256k1_ec_pubkey_tweak_add","value":"fn (cx: *const Context, pk: *mut PublicKey, tweak: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":115},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":59412,"byte_end":59442,"line_start":256,"line_end":256,"column_start":12,"column_end":42},"name":"secp256k1_ec_privkey_tweak_mul","qualname":"::ffi::::secp256k1_ec_privkey_tweak_mul","value":"fn (cx: *const Context, sk: *mut c_uchar, tweak: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":117},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":59652,"byte_end":59681,"line_start":261,"line_end":261,"column_start":12,"column_end":41},"name":"secp256k1_ec_pubkey_tweak_mul","qualname":"::ffi::::secp256k1_ec_pubkey_tweak_mul","value":"fn (cx: *const Context, pk: *mut PublicKey, tweak: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":119},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":59890,"byte_end":59917,"line_start":266,"line_end":266,"column_start":12,"column_end":39},"name":"secp256k1_ec_pubkey_combine","qualname":"::ffi::::secp256k1_ec_pubkey_combine","value":"fn (cx: *const Context, out: *mut PublicKey, ins: *const *const PublicKey, n: c_int) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"ForeignFunction","id":{"krate":0,"index":121},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":60177,"byte_end":60191,"line_start":272,"line_end":272,"column_start":12,"column_end":26},"name":"secp256k1_ecdh","qualname":"::ffi::::secp256k1_ecdh","value":"fn (cx: *const Context, out: *mut SharedSecret, point: *const PublicKey, scalar: *const c_uchar) -> c_int","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":170},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"key","qualname":"::key","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/key.rs","parent":null,"children":[{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":176},{"krate":0,"index":182},{"krate":0,"index":192},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":728},{"krate":0,"index":730},{"krate":0,"index":740},{"krate":0,"index":744},{"krate":0,"index":746},{"krate":0,"index":750},{"krate":0,"index":754},{"krate":0,"index":762},{"krate":0,"index":768},{"krate":0,"index":774},{"krate":0,"index":780},{"krate":0,"index":786},{"krate":0,"index":792},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":796},{"krate":0,"index":836},{"krate":0,"index":832},{"krate":0,"index":826},{"krate":0,"index":822},{"krate":0,"index":818},{"krate":0,"index":806},{"krate":0,"index":802},{"krate":0,"index":798},{"krate":0,"index":204},{"krate":0,"index":206},{"krate":0,"index":216},{"krate":0,"index":238}],"decl_id":null,"docs":" # Public and secret keys\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":196},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":80656,"byte_end":80665,"line_start":28,"line_end":28,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::key::SecretKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" Secret 256-bit key used as `x` in an ECDSA signature\n","sig":null,"attributes":[]},{"kind":"Static","id":{"krate":0,"index":198},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":80916,"byte_end":80919,"line_start":34,"line_end":34,"column_start":12,"column_end":15},"name":"ONE","qualname":"::key::ONE","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 1 encoded as a secret key\n Deprecated; `static` is not what I want; use `ONE_KEY` instead\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":81211,"byte_end":81219,"line_start":40,"line_end":40,"column_start":11,"column_end":19},"name":"ZERO_KEY","qualname":"::key::ZERO_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 0 encoded as a secret key\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":202},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":81523,"byte_end":81530,"line_start":46,"line_end":46,"column_start":11,"column_end":18},"name":"ONE_KEY","qualname":"::key::ONE_KEY","value":"SecretKey","parent":null,"children":[],"decl_id":null,"docs":" The number 1 encoded as a secret key\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":796},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":81923,"byte_end":81932,"line_start":53,"line_end":53,"column_start":12,"column_end":21},"name":"PublicKey","qualname":"::key::PublicKey","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Secp256k1 public key, used for verification of signatures\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":81912,"byte_end":81949,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":81912,"byte_end":81949,"line_start":53,"line_end":53,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":82233,"byte_end":82236,"line_start":66,"line_end":66,"column_start":12,"column_end":15},"name":"new","qualname":"<SecretKey>::new","value":"fn <R> (secp: &Secp256k1, rng: &mut R) -> SecretKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new random secret key\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":82172,"byte_end":82181,"line_start":64,"line_end":64,"column_start":5,"column_end":14}},{"value":"cfg(any(test, feature = \"rand\"))","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":82186,"byte_end":82221,"line_start":65,"line_end":65,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":82624,"byte_end":82634,"line_start":78,"line_end":78,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SecretKey>::from_slice","value":"fn (secp: &Secp256k1, data: &[u8]) -> Result<SecretKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SECRET_KEY_SIZE`-byte slice to a secret key\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":82603,"byte_end":82612,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":83300,"byte_end":83310,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"add_assign","qualname":"<SecretKey>::add_assign","value":"fn (&mut self, secp: &Secp256k1, other: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds one secret key to another, modulo the curve order\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":83216,"byte_end":83225,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":83730,"byte_end":83740,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<SecretKey>::mul_assign","value":"fn (&mut self, secp: &Secp256k1, other: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies one secret key by another, modulo the curve order\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":83640,"byte_end":83649,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84154,"byte_end":84157,"line_start":125,"line_end":125,"column_start":12,"column_end":15},"name":"new","qualname":"<PublicKey>::new","value":"fn () -> PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Creates a new zeroed out public key\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84133,"byte_end":84142,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84293,"byte_end":84301,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<PublicKey>::is_valid","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Determines whether a pubkey is valid\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84272,"byte_end":84281,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84556,"byte_end":84562,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<PublicKey>::as_ptr","value":"fn (&self) -> *const ffi::PublicKey","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84535,"byte_end":84544,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84709,"byte_end":84724,"line_start":145,"line_end":145,"column_start":12,"column_end":27},"name":"from_secret_key","qualname":"<PublicKey>::from_secret_key","value":"fn (secp: &Secp256k1, sk: &SecretKey) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new public key from a secret key.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84688,"byte_end":84697,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":85460,"byte_end":85470,"line_start":163,"line_end":163,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<PublicKey>::from_slice","value":"fn (secp: &Secp256k1, data: &[u8]) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a public key directly from a slice\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":85439,"byte_end":85448,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":86124,"byte_end":86133,"line_start":181,"line_end":181,"column_start":12,"column_end":21},"name":"serialize","qualname":"<PublicKey>::serialize","value":"fn (&self) -> [u8; constants::PUBLIC_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values. In compressed form\n the y-coordinate is represented by only a single bit, as x determines\n it up to one bit.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":85920,"byte_end":85929,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":86838,"byte_end":86860,"line_start":201,"line_end":201,"column_start":12,"column_end":34},"name":"serialize_uncompressed","qualname":"<PublicKey>::serialize_uncompressed","value":"fn (&self) -> [u8; constants::UNCOMPRESSED_PUBLIC_KEY_SIZE]","parent":null,"children":[],"decl_id":null,"docs":" Serialize the key as a byte-encoded pair of values, in uncompressed form\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":87610,"byte_end":87624,"line_start":222,"line_end":222,"column_start":12,"column_end":26},"name":"add_exp_assign","qualname":"<PublicKey>::add_exp_assign","value":"fn (&mut self, secp: &Secp256k1, other: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds the pk corresponding to `other` to the pk `self` in place\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":87518,"byte_end":87527,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":88229,"byte_end":88239,"line_start":239,"line_end":239,"column_start":12,"column_end":22},"name":"mul_assign","qualname":"<PublicKey>::mul_assign","value":"fn (&mut self, secp: &Secp256k1, other: &SecretKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Muliplies the pk `self` in place by the scalar `other`\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":88145,"byte_end":88154,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":88954,"byte_end":88961,"line_start":257,"line_end":257,"column_start":12,"column_end":19},"name":"combine","qualname":"<PublicKey>::combine","value":"fn (&self, secp: &Secp256k1, other: &PublicKey) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Adds a second key to this one, returning the sum. Returns an error if\n the result would be the point at infinity, i.e. we are adding this point\n to its own negation\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":242},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"schnorr","qualname":"::schnorr","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/secp256k1-0.9.2/src/schnorr.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":246},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":262},{"krate":0,"index":268},{"krate":0,"index":270},{"krate":0,"index":838},{"krate":0,"index":840},{"krate":0,"index":850},{"krate":0,"index":854},{"krate":0,"index":856},{"krate":0,"index":860},{"krate":0,"index":864},{"krate":0,"index":872},{"krate":0,"index":878},{"krate":0,"index":884},{"krate":0,"index":890},{"krate":0,"index":896},{"krate":0,"index":902},{"krate":0,"index":272},{"krate":0,"index":278}],"decl_id":null,"docs":" # Schnorr signatures\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":270},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":102352,"byte_end":102361,"line_start":31,"line_end":31,"column_start":12,"column_end":21},"name":"Signature","qualname":"::schnorr::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A Schnorr signature.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":102590,"byte_end":102601,"line_start":37,"line_end":37,"column_start":12,"column_end":23},"name":"deserialize","qualname":"<Signature>::deserialize","value":"fn (data: &[u8]) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Deserializes a signature from a 64-byte vector\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":102890,"byte_end":102899,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"serialize","qualname":"<Signature>::serialize","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serializes a signature to a 64-byte vector\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":103023,"byte_end":103035,"line_start":52,"line_end":52,"column_start":12,"column_end":24},"name":"sign_schnorr","qualname":"<Secp256k1>::sign_schnorr","value":"fn (&self, msg: &Message, sk: &SecretKey) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Create a Schnorr signature\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":103866,"byte_end":103880,"line_start":70,"line_end":70,"column_start":12,"column_end":26},"name":"verify_schnorr","qualname":"<Secp256k1>::verify_schnorr","value":"fn (&self, msg: &Message, sig: &Signature, pk: &PublicKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Verify a Schnorr signature\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":104575,"byte_end":104590,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"recover_schnorr","qualname":"<Secp256k1>::recover_schnorr","value":"fn (&self, msg: &Message, sig: &Signature) -> Result<PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the public key for which `sig` is a valid signature for `msg`.\n Requires a verify-capable context.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":906},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1750,"byte_end":1760,"line_start":62,"line_end":62,"column_start":12,"column_end":22},"name":"RecoveryId","qualname":"::RecoveryId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A tag used for recovering the public key from a compact signature\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1739,"byte_end":1766,"line_start":62,"line_end":62,"column_start":1,"column_end":28}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1739,"byte_end":1766,"line_start":62,"line_end":62,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":928},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1847,"byte_end":1856,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"Signature","qualname":"::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1836,"byte_end":1873,"line_start":66,"line_end":66,"column_start":1,"column_end":38}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1836,"byte_end":1873,"line_start":66,"line_end":66,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":950},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1993,"byte_end":2013,"line_start":70,"line_end":70,"column_start":12,"column_end":32},"name":"RecoverableSignature","qualname":"::RecoverableSignature","value":"","parent":null,"children":[],"decl_id":null,"docs":" An ECDSA signature with a recovery ID for pubkey recovery\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1982,"byte_end":2041,"line_start":70,"line_end":70,"column_start":1,"column_end":60}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1982,"byte_end":2041,"line_start":70,"line_end":70,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2154,"byte_end":2162,"line_start":75,"line_end":75,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<RecoveryId>::from_i32","value":"fn (id: i32) -> Result<RecoveryId, Error>","parent":null,"children":[],"decl_id":null,"docs":" Allows library users to create valid recovery IDs from i32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2065,"byte_end":2074,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2421,"byte_end":2427,"line_start":84,"line_end":84,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<RecoveryId>::to_i32","value":"fn (&self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Allows library users to convert recovery IDs to i32.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2339,"byte_end":2348,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":298},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2567,"byte_end":2575,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"from_der","qualname":"<Signature>::from_der","value":"fn (secp: &Secp256k1, data: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a DER-encoded byte slice to a signature\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2489,"byte_end":2498,"line_start":90,"line_end":90,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3107,"byte_end":3119,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<Signature>::from_compact","value":"fn (secp: &Secp256k1, data: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a 64-byte compact-encoded byte slice to a signature\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":3942,"byte_end":3954,"line_start":126,"line_end":126,"column_start":12,"column_end":24},"name":"from_der_lax","qualname":"<Signature>::from_der_lax","value":"fn (secp: &Secp256k1, data: &[u8]) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a \"lax DER\"-encoded byte slice to a signature. This is basically\n only useful for validating signatures in the Bitcoin blockchain from before\n 2016. It should never be used in new applications. This library does not\n support serializing to this \"format\"\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5574,"byte_end":5585,"line_start":155,"line_end":155,"column_start":12,"column_end":23},"name":"normalize_s","qualname":"<Signature>::normalize_s","value":"fn (&mut self, secp: &Secp256k1) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Normalizes a signature to a \"low S\" form. In ECDSA, signatures are\n of the form (r, s) where r and s are numbers lying in some finite\n field. The verification equation will pass for (r, s) iff it passes\n for (r, -s), so it is possible to ``modify'' signatures in transit\n by flipping the sign of s. This does not constitute a forgery since\n the signed message still cannot be changed, but for some applications,\n changing even the signature itself can be a problem. Such applications\n require a \"strong signature\". It is believed that ECDSA is a strong\n signature except for this ambiguity in the sign of s, so to accomodate\n these applications libsecp256k1 will only accept signatures for which\n s is in the lower half of the field range. This eliminates the\n ambiguity.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6015,"byte_end":6021,"line_start":166,"line_end":166,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Signature>::as_ptr","value":"fn (&self) -> *const ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":5994,"byte_end":6003,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6190,"byte_end":6200,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Signature>::as_mut_ptr","value":"fn (&mut self) -> *mut ffi::Signature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw mutable pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6169,"byte_end":6178,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6346,"byte_end":6359,"line_start":178,"line_end":178,"column_start":12,"column_end":25},"name":"serialize_der","qualname":"<Signature>::serialize_der","value":"fn (&self, secp: &Secp256k1) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in DER format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6278,"byte_end":6287,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6886,"byte_end":6903,"line_start":192,"line_end":192,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<Signature>::serialize_compact","value":"fn (&self, secp: &Secp256k1) -> [u8; 64]","parent":null,"children":[],"decl_id":null,"docs":" Serializes the signature in compact format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":6814,"byte_end":6823,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7638,"byte_end":7650,"line_start":217,"line_end":217,"column_start":12,"column_end":24},"name":"from_compact","qualname":"<RecoverableSignature>::from_compact","value":"fn (secp: &Secp256k1, data: &[u8], recid: RecoveryId) -> Result<RecoverableSignature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a compact-encoded byte slice to a signature. This\n representation is nonstandard and defined by the libsecp256k1\n library.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7463,"byte_end":7472,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8351,"byte_end":8357,"line_start":234,"line_end":234,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<RecoverableSignature>::as_ptr","value":"fn (&self) -> *const ffi::RecoverableSignature","parent":null,"children":[],"decl_id":null,"docs":" Obtains a raw pointer suitable for use with FFI functions\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8330,"byte_end":8339,"line_start":233,"line_end":233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":324},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8526,"byte_end":8543,"line_start":240,"line_end":240,"column_start":12,"column_end":29},"name":"serialize_compact","qualname":"<RecoverableSignature>::serialize_compact","value":"fn (&self, secp: &Secp256k1) -> (RecoveryId, [u8; 64])","parent":null,"children":[],"decl_id":null,"docs":" Serializes the recoverable signature in compact format\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":8442,"byte_end":8451,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9046,"byte_end":9057,"line_start":254,"line_end":254,"column_start":12,"column_end":23},"name":"to_standard","qualname":"<RecoverableSignature>::to_standard","value":"fn (&self, secp: &Secp256k1) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Converts a recoverable signature to a non-recoverable one (this is needed\n for verification\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9025,"byte_end":9034,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":356},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10354,"byte_end":10361,"line_start":309,"line_end":309,"column_start":12,"column_end":19},"name":"Message","qualname":"::Message","value":"","parent":null,"children":[],"decl_id":null,"docs":" A (hashed) message input to an ECDSA signature\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10588,"byte_end":10598,"line_start":316,"line_end":316,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Message>::from_slice","value":"fn (data: &[u8]) -> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `MESSAGE_SIZE`-byte slice to a message object\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10567,"byte_end":10576,"line_start":315,"line_end":315,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":213},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11357,"byte_end":11373,"line_start":340,"line_end":340,"column_start":5,"column_end":21},"name":"IncapableContext","qualname":"::Error::IncapableContext","value":"Error::IncapableContext","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" A `Secp256k1` was used for an operation, but it was not created to\n support this (so necessary precomputations have not been done)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":215},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11417,"byte_end":11435,"line_start":342,"line_end":342,"column_start":5,"column_end":23},"name":"IncorrectSignature","qualname":"::Error::IncorrectSignature","value":"Error::IncorrectSignature","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Signature failed verification\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":217},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11556,"byte_end":11570,"line_start":345,"line_end":345,"column_start":5,"column_end":19},"name":"InvalidMessage","qualname":"::Error::InvalidMessage","value":"Error::InvalidMessage","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Badly sized message (\"messages\" are actually fixed-sized digests; see the `MESSAGE_SIZE`\n constant)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":219},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11599,"byte_end":11615,"line_start":347,"line_end":347,"column_start":5,"column_end":21},"name":"InvalidPublicKey","qualname":"::Error::InvalidPublicKey","value":"Error::InvalidPublicKey","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Bad public key\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":221},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11643,"byte_end":11659,"line_start":349,"line_end":349,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::Error::InvalidSignature","value":"Error::InvalidSignature","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Bad signature\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":223},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11688,"byte_end":11704,"line_start":351,"line_end":351,"column_start":5,"column_end":21},"name":"InvalidSecretKey","qualname":"::Error::InvalidSecretKey","value":"Error::InvalidSecretKey","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Bad secret key\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":225},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11734,"byte_end":11751,"line_start":353,"line_end":353,"column_start":5,"column_end":22},"name":"InvalidRecoveryId","qualname":"::Error::InvalidRecoveryId","value":"Error::InvalidRecoveryId","parent":{"krate":0,"index":1040},"children":[],"decl_id":null,"docs":" Bad recovery id\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1040},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11199,"byte_end":11204,"line_start":337,"line_end":337,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"Error::{IncapableContext, IncorrectSignature, InvalidMessage, InvalidPublicKey, InvalidSignature, InvalidSecretKey, InvalidRecoveryId}","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":215},{"krate":0,"index":217},{"krate":0,"index":219},{"krate":0,"index":221},{"krate":0,"index":223},{"krate":0,"index":225}],"decl_id":null,"docs":" An ECDSA error\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11190,"byte_end":11754,"line_start":337,"line_end":354,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11190,"byte_end":11754,"line_start":337,"line_end":354,"column_start":1,"column_end":2}}]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12781,"byte_end":12790,"line_start":380,"line_end":380,"column_start":12,"column_end":21},"name":"Secp256k1","qualname":"::Secp256k1","value":"Secp256k1 {  }","parent":null,"children":[{"krate":0,"index":177},{"krate":0,"index":179}],"decl_id":null,"docs":" The secp256k1 engine, used to execute all signature operations\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":227},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13274,"byte_end":13278,"line_start":394,"line_end":394,"column_start":5,"column_end":9},"name":"None","qualname":"::ContextFlag::None","value":"ContextFlag::None","parent":{"krate":0,"index":1060},"children":[],"decl_id":null,"docs":" Can neither sign nor verify signatures (cheapest to create, useful\n for cases not involving signatures, such as creating keys from slices)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":229},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13327,"byte_end":13335,"line_start":396,"line_end":396,"column_start":5,"column_end":13},"name":"SignOnly","qualname":"::ContextFlag::SignOnly","value":"ContextFlag::SignOnly","parent":{"krate":0,"index":1060},"children":[],"decl_id":null,"docs":" Can sign but not verify signatures\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":231},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13386,"byte_end":13396,"line_start":398,"line_end":398,"column_start":5,"column_end":15},"name":"VerifyOnly","qualname":"::ContextFlag::VerifyOnly","value":"ContextFlag::VerifyOnly","parent":{"krate":0,"index":1060},"children":[],"decl_id":null,"docs":" Can verify but not create signatures\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":233},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13443,"byte_end":13447,"line_start":400,"line_end":400,"column_start":5,"column_end":9},"name":"Full","qualname":"::ContextFlag::Full","value":"ContextFlag::Full","parent":{"krate":0,"index":1060},"children":[],"decl_id":null,"docs":" Can verify and create signatures\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1060},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13102,"byte_end":13113,"line_start":391,"line_end":391,"column_start":10,"column_end":21},"name":"ContextFlag","qualname":"::ContextFlag","value":"ContextFlag::{None, SignOnly, VerifyOnly, Full}","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":229},{"krate":0,"index":231},{"krate":0,"index":233}],"decl_id":null,"docs":" Flags used to determine the capabilities of a `Secp256k1` object;\n the more capabilities, the more expensive it is to create.\n","sig":null,"attributes":[{"value":"structural_match","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13093,"byte_end":13449,"line_start":391,"line_end":401,"column_start":1,"column_end":2}},{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13093,"byte_end":13449,"line_start":391,"line_end":401,"column_start":1,"column_end":2}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14379,"byte_end":14382,"line_start":439,"line_end":439,"column_start":12,"column_end":15},"name":"new","qualname":"<Secp256k1>::new","value":"fn () -> Secp256k1","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14358,"byte_end":14367,"line_start":438,"line_end":438,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14538,"byte_end":14547,"line_start":444,"line_end":444,"column_start":12,"column_end":21},"name":"with_caps","qualname":"<Secp256k1>::with_caps","value":"fn (caps: ContextFlag) -> Secp256k1","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with the specified capabilities\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15095,"byte_end":15107,"line_start":455,"line_end":455,"column_start":12,"column_end":24},"name":"without_caps","qualname":"<Secp256k1>::without_caps","value":"fn () -> Secp256k1","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Secp256k1 context with no capabilities (just de/serialization)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":412},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15382,"byte_end":15391,"line_start":462,"line_end":462,"column_start":12,"column_end":21},"name":"randomize","qualname":"<Secp256k1>::randomize","value":"fn <R> (&mut self, rng: &mut R) -> ()","parent":null,"children":[],"decl_id":null,"docs":" (Re)randomizes the Secp256k1 context for cheap sidechannel resistence;\n see comment in libsecp256k1 commit d2275795f by Gregory Maxwell\n","sig":null,"attributes":[{"value":"cfg(any(test, feature = \"rand\"))","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":15335,"byte_end":15370,"line_start":461,"line_end":461,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16535,"byte_end":16551,"line_start":484,"line_end":484,"column_start":12,"column_end":28},"name":"generate_keypair","qualname":"<Secp256k1>::generate_keypair","value":"fn <R> (&self, rng: &mut R) -> Result<(key::SecretKey, key::PublicKey), Error>","parent":null,"children":[],"decl_id":null,"docs":" Generates a random keypair. Convenience function for `key::SecretKey::new`\n and `key::PublicKey::from_secret_key`; call those functions directly for\n batch key generation. Requires a signing-capable context.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16474,"byte_end":16483,"line_start":482,"line_end":482,"column_start":5,"column_end":14}},{"value":"cfg(any(test, feature = \"rand\"))","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16488,"byte_end":16523,"line_start":483,"line_end":483,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":16952,"byte_end":16956,"line_start":493,"line_end":493,"column_start":12,"column_end":16},"name":"sign","qualname":"<Secp256k1>::sign","value":"fn (&self, msg: &Message, sk: &key::SecretKey) -> Result<Signature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":17866,"byte_end":17882,"line_start":512,"line_end":512,"column_start":12,"column_end":28},"name":"sign_recoverable","qualname":"<Secp256k1>::sign_recoverable","value":"fn (&self, msg: &Message, sk: &key::SecretKey) -> Result<RecoverableSignature, Error>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\n Requires a signing-capable context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":18857,"byte_end":18864,"line_start":531,"line_end":531,"column_start":12,"column_end":19},"name":"recover","qualname":"<Secp256k1>::recover","value":"fn (&self, msg: &Message, sig: &RecoverableSignature) -> Result<key::PublicKey, Error>","parent":null,"children":[],"decl_id":null,"docs":" Determines the public key for which `sig` is a valid signature for\n `msg`. Requires a verify-capable context.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19833,"byte_end":19839,"line_start":554,"line_end":554,"column_start":12,"column_end":18},"name":"verify","qualname":"<Secp256k1>::verify","value":"fn (&self, msg: &Message, sig: &Signature, pk: &key::PublicKey) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `sig` is a valid ECDSA signature for `msg` using the public\n key `pubkey`. Returns `Ok(true)` on success. Note that this function cannot\n be used for Bitcoin consensus checking since there may exist signatures\n which OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\n verify-capable context.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":19812,"byte_end":19821,"line_start":553,"line_end":553,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":45389,"byte_end":45401,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46084,"byte_end":46096,"line_start":49,"line_end":49,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":76}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46228,"byte_end":46240,"line_start":57,"line_end":57,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46394,"byte_end":46406,"line_start":66,"line_end":66,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":86},{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46580,"byte_end":46592,"line_start":75,"line_end":75,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46771,"byte_end":46783,"line_start":84,"line_end":84,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50665,"byte_end":50674,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50964,"byte_end":50973,"line_start":70,"line_end":70,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51485,"byte_end":51494,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":150},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51767,"byte_end":51787,"line_start":95,"line_end":95,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":156},{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52285,"byte_end":52297,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":82116,"byte_end":82125,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":210},{"krate":0,"index":212},{"krate":0,"index":214}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84073,"byte_end":84082,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":220},{"krate":0,"index":222},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":89458,"byte_end":89467,"line_start":271,"line_end":271,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":102512,"byte_end":102521,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":274},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":102965,"byte_end":102974,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2048,"byte_end":2058,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":292},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2473,"byte_end":2482,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":302},{"krate":0,"index":304},{"krate":0,"index":306},{"krate":0,"index":308},{"krate":0,"index":310},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7324,"byte_end":7333,"line_start":204,"line_end":204,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7436,"byte_end":7456,"line_start":212,"line_end":212,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322},{"krate":0,"index":324},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9451,"byte_end":9471,"line_start":265,"line_end":265,"column_start":42,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9628,"byte_end":9637,"line_start":272,"line_end":272,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":334},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9791,"byte_end":9800,"line_start":281,"line_end":281,"column_start":40,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9974,"byte_end":9983,"line_start":290,"line_end":290,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10162,"byte_end":10171,"line_start":299,"line_end":299,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":352},{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10488,"byte_end":10495,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11025,"byte_end":11032,"line_start":329,"line_end":329,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11847,"byte_end":11852,"line_start":357,"line_end":357,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12009,"byte_end":12014,"line_start":363,"line_end":363,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":374}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12867,"byte_end":12876,"line_start":385,"line_end":385,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12901,"byte_end":12910,"line_start":386,"line_end":386,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13540,"byte_end":13551,"line_start":404,"line_end":404,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13681,"byte_end":13690,"line_start":410,"line_end":410,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13882,"byte_end":13891,"line_start":419,"line_end":419,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13980,"byte_end":13989,"line_start":422,"line_end":422,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14015,"byte_end":14024,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14190,"byte_end":14199,"line_start":430,"line_end":430,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14302,"byte_end":14311,"line_start":436,"line_end":436,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414},{"krate":0,"index":416},{"krate":0,"index":418},{"krate":0,"index":420},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1506,"byte_end":1515,"line_start":51,"line_end":51,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":32}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1525,"byte_end":1529,"line_start":52,"line_end":52,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":54}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1539,"byte_end":1542,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":102}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1552,"byte_end":1555,"line_start":54,"line_end":54,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":170}},{"kind":"Mod","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1565,"byte_end":1572,"line_start":55,"line_end":55,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":242}}],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":45389,"byte_end":45401,"line_start":29,"line_end":29,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":424},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46084,"byte_end":46096,"line_start":49,"line_end":49,"column_start":34,"column_end":46},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2634}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46228,"byte_end":46240,"line_start":57,"line_end":57,"column_start":28,"column_end":40},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2036}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46394,"byte_end":46406,"line_start":66,"line_end":66,"column_start":40,"column_end":52},"kind":{"variant":"Impl","fields":[3]},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2036}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46580,"byte_end":46592,"line_start":75,"line_end":75,"column_start":44,"column_end":56},"kind":{"variant":"Impl","fields":[4]},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2036}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,101,99,100,104,46,114,115],"byte_start":46771,"byte_end":46783,"line_start":84,"line_end":84,"column_start":37,"column_end":49},"kind":{"variant":"Impl","fields":[5]},"from":{"krate":0,"index":424},"to":{"krate":2,"index":2036}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50665,"byte_end":50674,"line_start":63,"line_end":63,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[6]},"from":{"krate":0,"index":132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":50964,"byte_end":50973,"line_start":70,"line_end":70,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[7]},"from":{"krate":0,"index":132},"to":{"krate":2,"index":7980}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51485,"byte_end":51494,"line_start":88,"line_end":88,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[8]},"from":{"krate":0,"index":144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":51767,"byte_end":51787,"line_start":95,"line_end":95,"column_start":6,"column_end":26},"kind":{"variant":"Impl","fields":[9]},"from":{"krate":0,"index":146},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,102,102,105,46,114,115],"byte_start":52285,"byte_end":52297,"line_start":108,"line_end":108,"column_start":6,"column_end":18},"kind":{"variant":"Impl","fields":[10]},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":82116,"byte_end":82125,"line_start":62,"line_end":62,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[11]},"from":{"krate":0,"index":196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":84073,"byte_end":84082,"line_start":122,"line_end":122,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[12]},"from":{"krate":0,"index":796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,107,101,121,46,114,115],"byte_start":89458,"byte_end":89467,"line_start":271,"line_end":271,"column_start":31,"column_end":40},"kind":{"variant":"Impl","fields":[13]},"from":{"krate":0,"index":796},"to":{"krate":2,"index":2634}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":102512,"byte_end":102521,"line_start":35,"line_end":35,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[14]},"from":{"krate":0,"index":270},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,115,99,104,110,111,114,114,46,114,115],"byte_start":102965,"byte_end":102974,"line_start":50,"line_end":50,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[15]},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2048,"byte_end":2058,"line_start":72,"line_end":72,"column_start":6,"column_end":16},"kind":{"variant":"Impl","fields":[16]},"from":{"krate":0,"index":906},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2473,"byte_end":2482,"line_start":89,"line_end":89,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[17]},"from":{"krate":0,"index":928},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7324,"byte_end":7333,"line_start":204,"line_end":204,"column_start":31,"column_end":40},"kind":{"variant":"Impl","fields":[18]},"from":{"krate":0,"index":928},"to":{"krate":2,"index":2634}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":7436,"byte_end":7456,"line_start":212,"line_end":212,"column_start":6,"column_end":26},"kind":{"variant":"Impl","fields":[19]},"from":{"krate":0,"index":950},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9451,"byte_end":9471,"line_start":265,"line_end":265,"column_start":42,"column_end":62},"kind":{"variant":"Impl","fields":[20]},"from":{"krate":0,"index":950},"to":{"krate":2,"index":2634}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9628,"byte_end":9637,"line_start":272,"line_end":272,"column_start":28,"column_end":37},"kind":{"variant":"Impl","fields":[21]},"from":{"krate":0,"index":928},"to":{"krate":2,"index":2036}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9791,"byte_end":9800,"line_start":281,"line_end":281,"column_start":40,"column_end":49},"kind":{"variant":"Impl","fields":[22]},"from":{"krate":0,"index":928},"to":{"krate":2,"index":2036}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":9974,"byte_end":9983,"line_start":290,"line_end":290,"column_start":44,"column_end":53},"kind":{"variant":"Impl","fields":[23]},"from":{"krate":0,"index":928},"to":{"krate":2,"index":2036}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10162,"byte_end":10171,"line_start":299,"line_end":299,"column_start":37,"column_end":46},"kind":{"variant":"Impl","fields":[24]},"from":{"krate":0,"index":928},"to":{"krate":2,"index":2036}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":10488,"byte_end":10495,"line_start":313,"line_end":313,"column_start":6,"column_end":13},"kind":{"variant":"Impl","fields":[25]},"from":{"krate":0,"index":356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11025,"byte_end":11032,"line_start":329,"line_end":329,"column_start":46,"column_end":53},"kind":{"variant":"Impl","fields":[26]},"from":{"krate":0,"index":356},"to":{"krate":2,"index":2634}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":11847,"byte_end":11852,"line_start":357,"line_end":357,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[27]},"from":{"krate":0,"index":1040},"to":{"krate":2,"index":8404}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12009,"byte_end":12014,"line_start":363,"line_end":363,"column_start":23,"column_end":28},"kind":{"variant":"Impl","fields":[28]},"from":{"krate":0,"index":1040},"to":{"krate":1,"index":2466}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12867,"byte_end":12876,"line_start":385,"line_end":385,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[29]},"from":{"krate":0,"index":376},"to":{"krate":2,"index":1680}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":12901,"byte_end":12910,"line_start":386,"line_end":386,"column_start":22,"column_end":31},"kind":{"variant":"Impl","fields":[30]},"from":{"krate":0,"index":376},"to":{"krate":2,"index":1692}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13540,"byte_end":13551,"line_start":404,"line_end":404,"column_start":23,"column_end":34},"kind":{"variant":"Impl","fields":[31]},"from":{"krate":0,"index":1060},"to":{"krate":2,"index":8404}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13681,"byte_end":13690,"line_start":410,"line_end":410,"column_start":16,"column_end":25},"kind":{"variant":"Impl","fields":[32]},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2578}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13882,"byte_end":13891,"line_start":419,"line_end":419,"column_start":20,"column_end":29},"kind":{"variant":"Impl","fields":[33]},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2390}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":13980,"byte_end":13989,"line_start":422,"line_end":422,"column_start":13,"column_end":22},"kind":{"variant":"Impl","fields":[34]},"from":{"krate":0,"index":376},"to":{"krate":2,"index":2396}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14015,"byte_end":14024,"line_start":424,"line_end":424,"column_start":21,"column_end":30},"kind":{"variant":"Impl","fields":[35]},"from":{"krate":0,"index":376},"to":{"krate":2,"index":8400}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14190,"byte_end":14199,"line_start":430,"line_end":430,"column_start":15,"column_end":24},"kind":{"variant":"Impl","fields":[36]},"from":{"krate":0,"index":376},"to":{"krate":2,"index":1958}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,115,101,99,112,50,53,54,107,49,45,48,46,57,46,50,47,115,114,99,47,108,105,98,46,114,115],"byte_start":14302,"byte_end":14311,"line_start":436,"line_end":436,"column_start":6,"column_end":15},"kind":{"variant":"Impl","fields":[37]},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}}]}