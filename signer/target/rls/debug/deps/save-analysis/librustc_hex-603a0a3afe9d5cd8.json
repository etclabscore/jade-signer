{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.18.1","compilation":{"directory":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48],"program":"/home/k2/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rustc_hex","/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","--color","never","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=603a0a3afe9d5cd8","-C","extra-filename=-603a0a3afe9d5cd8","--out-dir","/home/k2/Workbench/jade-signer/target/rls/debug/deps","-L","dependency=/home/k2/Workbench/jade-signer/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/k2/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu"],"output":[47,104,111,109,101,47,107,50,47,87,111,114,107,98,101,110,99,104,47,106,97,100,101,45,115,105,103,110,101,114,47,116,97,114,103,101,116,47,114,108,115,47,100,101,98,117,103,47,100,101,112,115,47,108,105,98,114,117,115,116,99,95,104,101,120,45,54,48,51,97,48,97,51,97,102,101,57,100,53,99,100,56,46,114,109,101,116,97]},"prelude":{"crate_id":{"name":"rustc_hex","disambiguator":[7285315163366699805,11818199925945761396]},"crate_root":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src","external_crates":[{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7643654914076001483,12823312228256817667]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[4460275713293065345,16951895692468253576]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11180861269583930402,7218748977825450810]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[4642033898704731799,9729154345420223309]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12818274104326731107,682062526801359143]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[12755702926841618597,12055052820604553981]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":7,"id":{"name":"rustc_demangle","disambiguator":[1437492519896548358,983587994810570921]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[15755932282147130284,14837425147787014863]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":9,"id":{"name":"backtrace_sys","disambiguator":[14848937618377221952,4542086914855755700]}},{"file_name":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","num":10,"id":{"name":"panic_unwind","disambiguator":[1423741341053305533,4588337216884661599]}}],"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":509,"byte_end":6212,"line_start":13,"line_end":221,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":570,"byte_end":571,"line_start":15,"line_end":15,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"InvalidHexLength, InvalidHexCharacter","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":509,"byte_end":6212,"line_start":13,"line_end":221,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/k2/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-hex-1.0.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":2},{"krate":0,"index":4},{"krate":0,"index":6},{"krate":0,"index":8},{"krate":0,"index":10},{"krate":0,"index":12},{"krate":0,"index":16},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":26},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":52},{"krate":0,"index":30},{"krate":0,"index":34},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":46}],"decl_id":null,"docs":" Hex binary-to-text encoding\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":12},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":674,"byte_end":679,"line_start":21,"line_end":21,"column_start":11,"column_end":16},"name":"ToHex","qualname":"::ToHex","value":"ToHex","parent":null,"children":[{"krate":0,"index":14}],"decl_id":null,"docs":" A trait for converting a value to hexadecimal encoding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":778,"byte_end":784,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"to_hex","qualname":"::ToHex::to_hex","value":"fn (&self) -> String","parent":{"krate":0,"index":12},"children":[],"decl_id":null,"docs":" Converts the value of `self` to a hex value, returning the owned\n string.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":26},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1686,"byte_end":1693,"line_start":63,"line_end":63,"column_start":11,"column_end":18},"name":"FromHex","qualname":"::FromHex","value":"FromHex","parent":null,"children":[{"krate":0,"index":28}],"decl_id":null,"docs":" A trait for converting hexadecimal encoded values\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1843,"byte_end":1851,"line_start":66,"line_end":66,"column_start":8,"column_end":16},"name":"from_hex","qualname":"::FromHex::from_hex","value":"fn (&self) -> Result<Vec<u8>, FromHexError>","parent":{"krate":0,"index":26},"children":[],"decl_id":null,"docs":" Converts the value of `self`, interpreted as hexadecimal encoded data,\n into an owned vector of bytes, returning the vector.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":27},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2075,"byte_end":2094,"line_start":73,"line_end":73,"column_start":5,"column_end":24},"name":"InvalidHexCharacter","qualname":"::FromHexError::InvalidHexCharacter","value":"FromHexError::InvalidHexCharacter(char, usize)","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" The input contained a character not part of the hex format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":33},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2153,"byte_end":2169,"line_start":75,"line_end":75,"column_start":5,"column_end":21},"name":"InvalidHexLength","qualname":"::FromHexError::InvalidHexLength","value":"FromHexError::InvalidHexLength","parent":{"krate":0,"index":50},"children":[],"decl_id":null,"docs":" The input had an invalid length\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":50},"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1989,"byte_end":2001,"line_start":71,"line_end":71,"column_start":10,"column_end":22},"name":"FromHexError","qualname":"::FromHexError","value":"FromHexError::{InvalidHexCharacter, InvalidHexLength}","parent":null,"children":[{"krate":0,"index":27},{"krate":0,"index":33}],"decl_id":null,"docs":" Errors that can occur when decoding a hex encoded string\n","sig":null,"attributes":[{"value":"rustc_copy_clone_marker","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":1980,"byte_end":2172,"line_start":71,"line_end":76,"column_start":1,"column_end":2}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2194,"byte_end":2206,"line_start":78,"line_end":78,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2519,"byte_end":2531,"line_start":88,"line_end":88,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2745,"byte_end":2757,"line_start":97,"line_end":97,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2194,"byte_end":2206,"line_start":78,"line_end":78,"column_start":21,"column_end":33},"kind":{"variant":"Impl","fields":[0]},"from":{"krate":0,"index":50},"to":{"krate":2,"index":8400}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2519,"byte_end":2531,"line_start":88,"line_end":88,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[1]},"from":{"krate":0,"index":50},"to":{"krate":1,"index":2466}},{"span":{"file_name":[47,104,111,109,101,47,107,50,47,46,99,97,114,103,111,47,114,101,103,105,115,116,114,121,47,115,114,99,47,103,105,116,104,117,98,46,99,111,109,45,49,101,99,99,54,50,57,57,100,98,57,101,99,56,50,51,47,114,117,115,116,99,45,104,101,120,45,49,46,48,46,48,47,115,114,99,47,108,105,98,46,114,115],"byte_start":2745,"byte_end":2757,"line_start":97,"line_end":97,"column_start":23,"column_end":35},"kind":{"variant":"Impl","fields":[2]},"from":{"krate":0,"index":50},"to":{"krate":2,"index":8404}}]}